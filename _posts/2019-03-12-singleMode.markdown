---
layout:       post
title:        "常用设计模式"
subtitle:     "单例模式"
date:         2019-03-12 21:00:00
author:       "boowen"
header-img:   "img/post-bg-pubsub.png"
header-mask:  0.3
tags:
    - 前端
    - JS
    - 设计模式
---
>其实设计模式并没有那么高深，它只是一种写代码的套路。或许在写代码的时候，你已经用了某种设计模式，但是并不知道它是有名字的。现在总结下常用的设计模式。以后方便装逼。

## 学习目的

>学习一样东西的目的，自然是要解决实际的问题。

接到一个需求，我需要写出一个模态框，模态框里的类型很多。点击按钮，弹出一个对话框。我当时的策略是写了多个对应的构造函数，每次需要弹出一个模态框的时候，就new一个对象出来。模态框的对应的HTML就放在页面里。但是这样写的话有缺点，如果其他的页面需要模态框，又得复制一遍模态框的HTML。而且有很多不同类型的模态框，大概有30来个，意味着同事使用的时候要问我对应类型模态框的名字，如果添加一个。所以我就把所有的创建的模态框的方法，都由一个构造函数createModule来管理。使用者只需要在创建的时候，传入对应的类型，就可以创建相应的类型的模态框。createModule函数内部用一个对象存储了映射了对应的模态框的构造的函数的关系。在每次创建的时候，都会检查是否重复创建。写到这里，有一点单例模式的影子了。但是还有缺陷，违背了单一职责的原则。
